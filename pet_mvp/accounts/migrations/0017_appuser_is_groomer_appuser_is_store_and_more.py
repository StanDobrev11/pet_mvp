# Generated by Django 5.2 on 2025-06-09 16:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0016_rename_clinic_address_clinic_address_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='appuser',
            name='is_groomer',
            field=models.BooleanField(default=False, verbose_name='Groomer status'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='is_store',
            field=models.BooleanField(default=False, verbose_name='Store status'),
        ),
        migrations.AddField(
            model_name='clinic',
            name='additional_services',
            field=models.JSONField(blank=True, choices=[('groomer', 'Groomer'), ('store', 'Store')], default=list, verbose_name='Additional services provided'),
        ),
        migrations.AlterField(
            model_name='clinic',
            name='address',
            field=models.CharField(max_length=255, verbose_name='Venue address'),
        ),
        migrations.AlterField(
            model_name='clinic',
            name='is_approved',
            field=models.BooleanField(default=False, verbose_name='Is approved'),
        ),
        migrations.AlterField(
            model_name='clinic',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Venue name'),
        ),
        migrations.AlterField(
            model_name='clinic',
            name='user',
            field=models.OneToOneField(limit_choices_to={'is_clinic': True, 'is_owner': False}, on_delete=django.db.models.deletion.CASCADE, related_name='clinic', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='Groomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Venue name')),
                ('address', models.CharField(max_length=255, verbose_name='Venue address')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is approved')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('additional_services', models.JSONField(blank=True, choices=[('groomer', 'Groomer'), ('store', 'Store')], default=list, verbose_name='Additional services provided')),
                ('user', models.OneToOneField(limit_choices_to={'is_groomer': True, 'is_owner': False}, on_delete=django.db.models.deletion.CASCADE, related_name='groomer', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Venue name')),
                ('address', models.CharField(max_length=255, verbose_name='Venue address')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is approved')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('additional_services', models.JSONField(blank=True, choices=[('groomer', 'Groomer'), ('store', 'Store')], default=list, verbose_name='Additional services provided')),
                ('user', models.OneToOneField(limit_choices_to={'is_owner': False, 'is_store': True}, on_delete=django.db.models.deletion.CASCADE, related_name='store', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
