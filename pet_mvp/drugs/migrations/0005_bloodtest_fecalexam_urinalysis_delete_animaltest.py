# Generated by Django 5.2 on 2025-05-06 17:13

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('drugs', '0004_delete_bloodtest_delete_fecalexam_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BloodTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(help_text='Name of the test', max_length=100, verbose_name='Test Name')),
                ('result', models.TextField(help_text='Description of the test result', verbose_name='Test Result')),
                ('date_conducted', models.DateField(auto_now_add=True, help_text='Date when the test was conducted', verbose_name='Date Conducted')),
                ('additional_notes', models.TextField(blank=True, help_text='Optional notes or observations about the test', null=True, verbose_name='Additional Notes')),
                ('white_blood_cells', models.DecimalField(blank=True, decimal_places=2, help_text='Count of white blood cells per microliter', max_digits=6, null=True, verbose_name='White Blood Cells (WBC)')),
                ('red_blood_cells', models.DecimalField(blank=True, decimal_places=2, help_text='Count of red blood cells per microliter', max_digits=6, null=True, verbose_name='Red Blood Cells (RBC)')),
                ('hemoglobin', models.DecimalField(blank=True, decimal_places=2, help_text='Measurement of hemoglobin concentration', max_digits=5, null=True, verbose_name='Hemoglobin Level (g/dL)')),
                ('platelets', models.DecimalField(blank=True, decimal_places=2, help_text='Platelet count per microliter', max_digits=6, null=True, verbose_name='Platelets')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FecalExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(help_text='Name of the test', max_length=100, verbose_name='Test Name')),
                ('result', models.TextField(help_text='Description of the test result', verbose_name='Test Result')),
                ('date_conducted', models.DateField(auto_now_add=True, help_text='Date when the test was conducted', verbose_name='Date Conducted')),
                ('additional_notes', models.TextField(blank=True, help_text='Optional notes or observations about the test', null=True, verbose_name='Additional Notes')),
                ('consistency', models.CharField(blank=True, help_text='Consistency of the feces, e.g., firm, watery', max_length=50, null=True, verbose_name='Consistency')),
                ('parasites_detected', models.BooleanField(default=False, help_text='Were any parasites detected in the sample?', verbose_name='Parasites Detected')),
                ('parasite_type', models.CharField(blank=True, help_text='Type of detected parasites, if any', max_length=100, null=True, verbose_name='Type of Parasites')),
                ('blood_presence', models.BooleanField(default=False, help_text='Indicates if blood was found in the sample', verbose_name='Blood Presence in Stool')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Urinalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(help_text='Name of the test', max_length=100, verbose_name='Test Name')),
                ('result', models.TextField(help_text='Description of the test result', verbose_name='Test Result')),
                ('date_conducted', models.DateField(auto_now_add=True, help_text='Date when the test was conducted', verbose_name='Date Conducted')),
                ('additional_notes', models.TextField(blank=True, help_text='Optional notes or observations about the test', null=True, verbose_name='Additional Notes')),
                ('color', models.CharField(blank=True, help_text='Color of the urine', max_length=50, null=True, verbose_name='Color')),
                ('clarity', models.CharField(blank=True, help_text='Clarity of the urine, e.g., clear, cloudy', max_length=50, null=True, verbose_name='Clarity')),
                ('ph', models.DecimalField(blank=True, decimal_places=2, help_text='Urine pH level', max_digits=4, null=True, verbose_name='pH')),
                ('specific_gravity', models.DecimalField(blank=True, decimal_places=3, help_text='Measurement of urine concentration', max_digits=4, null=True, verbose_name='Specific Gravity')),
                ('protein', models.CharField(blank=True, help_text='Presence of protein in urine', max_length=50, null=True, verbose_name='Protein')),
                ('glucose', models.CharField(blank=True, help_text='Presence of glucose in urine', max_length=50, null=True, verbose_name='Glucose')),
                ('red_blood_cells', models.CharField(blank=True, help_text='Presence of red blood cells in urine', max_length=50, null=True, verbose_name='Red Blood Cells')),
                ('white_blood_cells', models.CharField(blank=True, help_text='Presence of white blood cells in urine', max_length=50, null=True, verbose_name='White Blood Cells')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='AnimalTest',
        ),
    ]
