services:
  app:
    build: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 20s
      timeout: 5s
      retries: 20
    command: 
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py compilemessages &&
             python load_fixtures.py &&
             python caller.py &&
             gunicorn --bind=0.0.0.0:8000 pet_mvp.wsgi:application"

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build: .
    command: celery -A pet_mvp worker --loglevel=info
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app

  celery-beat:
    build: .
    restart: always
    command: celery -A pet_mvp beat --loglevel=info
    depends_on:
      - redis
      - app
      - celery
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app

  # mailhog:
  #   image: mailhog/mailhog
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./collect_static:/app/collect_static
      - ./media:/app/media
    links:
      - app

volumes:
  redis_data:
